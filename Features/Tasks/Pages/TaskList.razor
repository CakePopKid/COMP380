@page "/tasks"
@using Blazorise.DataGrid
@using ProjectManagementSystem.Features.Tasks.Models
@using ProjectManagementSystem.Data 
@inject TaskService TaskService
@inject NavigationManager nav
@inject ApplicationDbContext db

@code {
    private Modal modalRef;
    Guid? taskIdToBeDeleted;

    List<TaskListModel> taskListModelData = new List<TaskListModel>();

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        taskListModelData = await TaskService.GetTasksListDataAsync();
    }

    private void OnEditClick(Guid taskId)
    {
        nav.NavigateTo("/tasks/" + taskId);
    }

    private void OnDeleteClick(Guid taskId)
    {
        modalRef.Show();
        taskIdToBeDeleted = taskId;
    }

    private async void ConfirmDelete()
    {
        var taskDelete = await TaskService.GetTaskById((Guid)taskIdToBeDeleted);
        db.Remove(taskDelete.Task);
        var result = await db.SaveChangesAsync();
        if (result > 0)
        {
            // Need to get our new data and refresh the component since we just deleted something from the Grid
            taskListModelData = taskListModelData.FindAll(x => x.TaskId != taskIdToBeDeleted).ToList();
            StateHasChanged();
        }
        modalRef.Hide();
    }

    private void CancelDelete()
    {
        taskIdToBeDeleted = null;
        modalRef.Hide();
    }

    private void OnCreateTaskClick()
    {
        nav.NavigateTo("/tasks/create");
    }

    private void OnTabularViewClick()
    {
        nav.NavigateTo("/tasks/tabular");
    }

    private void OnGanttChartClick()
    {
        nav.NavigateTo("/tasks/gantt");
    }
}

<div class="container-fluid">
    @if (this.taskListModelData == null)
    {
        <h1>Loading...</h1>
    }
    else if (this.taskListModelData.Count == 0)
    {
        <h1>There are no tasks</h1>
    }
    else
    {

        <h1>Tasks List</h1>

        <div class="list-table" data-backdrop="false">
            <Modal @ref="modalRef">                
                <ModalContent IsCentered="true">
                    <ModalHeader>
                        <ModalTitle>Delete Task</ModalTitle>
                        <CloseButton Clicked="@CancelDelete" />
                    </ModalHeader>
                    <ModalBody>
                        <text>Are you sure you want to delete?</text>
                    </ModalBody>
                    <ModalFooter>
                        <Button Color="Color.Secondary" Clicked="@CancelDelete">Cancel</Button>
                        <Button Color="Color.Danger" Clicked="@ConfirmDelete">Delete</Button>
                    </ModalFooter>
                </ModalContent>
            </Modal>
            <DataGrid TItem="TaskListModel" Data="@taskListModelData" Sortable="true" Filterable="true" ShowPager="true" PageSize="20" Striped="true" Borderless="true" Bordered="true" Editable="true">
                <DataGridColumn TItem="TaskListModel" Field="@nameof(TaskListModel.TaskName)" Caption="Name"></DataGridColumn>
                <DataGridColumn TItem="TaskListModel" Field="@nameof(TaskListModel.ResourceName)" Caption="Assigned Resource"></DataGridColumn>
                <DataGridColumn TItem="TaskListModel" Field="@nameof(TaskListModel.ExpectedStartDate)" Caption="Expected Start Date"></DataGridColumn>
                <DataGridColumn TItem="TaskListModel" Field="@nameof(TaskListModel.ExpectedEndDate)" Caption="Expected End Date"></DataGridColumn>
                <DataGridColumn TItem="TaskListModel" Field="@nameof(TaskListModel.TaskType)" Caption="Type"></DataGridColumn>
                <DataGridCommandColumn TItem="TaskListModel">
                    <NewCommandTemplate Context="task"></NewCommandTemplate>
                    <EditCommandTemplate Context="task"><Button Color="Color.Primary" Clicked="@(e=> OnEditClick(task.Item.TaskId))">Edit</Button></EditCommandTemplate>
                    <DeleteCommandTemplate Context="task"><Button Color="Color.Danger" Clicked="@(e=> OnDeleteClick(task.Item.TaskId))">Delete</Button></DeleteCommandTemplate>
                </DataGridCommandColumn>
            </DataGrid>
        </div>
        <div style="padding-top:1em;">
            <Button Clicked="@OnTabularViewClick" Color="Color.Dark" class="tabular-button">Tabular View</Button>
            <Button Clicked="@OnGanttChartClick" Color="Color.Secondary" class="gantt-button">Gantt Chart</Button>
        </div>
    }
    <div style="padding-top:1em;">
        <Button Clicked="@OnCreateTaskClick" Color="Color.Info">Create Task</Button>
    </div>
</div>
