@page "/issues"
@using Blazorise.DataGrid
@using ProjectManagementSystem.Features.ActionItems
@using ProjectManagementSystem.Features.Decisions
@using ProjectManagementSystem.Features.Issues
@using ProjectManagementSystem.Features.Issues.Models
@using ProjectManagementSystem.Data
@inject IssueService IssueService
@inject NavigationManager nav
@inject ApplicationDbContext db

@code {
    private Modal modalRef;
    Guid? issueIdToBeDeleted;
    List<IssueListModel> issueListData = new List<IssueListModel>();
    List<IssueListModel> taskListData = new List<IssueListModel>();
    string expectedCompletionDate;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        issueListData = await IssueService.GetIssuesListData();
    }

    private void OnCreateIssueClick()
    {
        nav.NavigateTo("/issues/create");
    }

    private void OnEditClick(Guid issueId)
    {
        nav.NavigateTo("/issues/" + issueId);
    }

    private void OnDeleteClick(Guid issueId)
    {
        modalRef.Show();
        issueIdToBeDeleted = issueId;
    }

    private async void ConfirmDelete()
    {
        var issueDelete = await IssueService.GetIssueById((Guid)issueIdToBeDeleted);
        db.Remove(issueDelete);

        IssueModel toDelete = new IssueModel();
        //get all associated actions items and decisions
        //set their issue id to null
        //remove the sisue
        var result = await db.SaveChangesAsync();
        if (result > 0)
        {
            //Need to get new data while refreshing component after removing item from Grid
            issueListData = issueListData.FindAll(x => x.IssueId != issueIdToBeDeleted).ToList();
            StateHasChanged(); //updates Blazorise page
        }
        modalRef.Hide();
    }   

    private void CancelDelete()
    {
        issueIdToBeDeleted = null;
        modalRef.Hide();
    }
}
<div class="container-fluid">
    @if (this.issueListData == null)
    {
        <h1>Loading...</h1>
    }
    else if (this.issueListData.Count == 0)
    {
        <h1>There are no issues</h1>
    }
    else
    {

        <h1>Issues List</h1>
        <div class="list-table" data-backdrop="false">
            <Modal @ref="modalRef">
                <ModalContent IsCentered="true">
                    <ModalHeader>
                        <ModalTitle>Delete Issue</ModalTitle>
                        <CloseButton Clicked="@CancelDelete" />
                    </ModalHeader>
                    <ModalBody>
                        <text>Are you sure you want to delete?</text>
                    </ModalBody>
                    <ModalFooter>
                        <Button Color="Color.Secondary" Clicked="@CancelDelete">Cancel</Button>
                        <Button Color="Color.Danger" Clicked="@ConfirmDelete">Delete</Button>
                    </ModalFooter>
                </ModalContent>
            </Modal>
            <DataGrid TItem="IssueListModel" Data="@issueListData" Sortable="true" Filterable="true" ShowPager="true" PageSize="20" Striped="true" Borderless="true" Bordered="true" Editable="true">
                <DataGridColumn TItem="IssueListModel" Field="@nameof(IssueListModel.Name)" Caption="Name"></DataGridColumn>
                <DataGridColumn TItem="IssueListModel" Field="@nameof(IssueListModel.Priority)" Caption="Priority"></DataGridColumn>
                <DataGridColumn TItem="IssueListModel" Field="@nameof(IssueListModel.Severity)" Caption="Severity"></DataGridColumn>
                <DataGridColumn TItem="IssueListModel" Field="@nameof(IssueListModel.Status)" Caption="Status"></DataGridColumn>
                <DataGridColumn TItem="IssueListModel" Field="@nameof(IssueListModel.ExpectedCompletionDate)" Caption="Expected Completion Date"></DataGridColumn>
                <DataGridColumn TItem="IssueListModel" Field="@nameof(IssueListModel.ActualCompletionDate)" Caption="Actual Completion Date"></DataGridColumn>
                <DataGridColumn TItem="IssueListModel" Field="@nameof(IssueListModel.UpdateDate)" Caption="Update Date"></DataGridColumn>
                <DataGridCommandColumn TItem="IssueListModel">
                    <NewCommandTemplate Context="issue"></NewCommandTemplate>
                    <EditCommandTemplate Context="issue"><Button Color="Color.Primary" Clicked="@(e=> OnEditClick(issue.Item.IssueId))">Edit</Button></EditCommandTemplate>
                    <DeleteCommandTemplate Context="issue"><Button Color="Color.Danger" Clicked="@(e=> OnDeleteClick(issue.Item.IssueId))">Delete</Button></DeleteCommandTemplate>
                </DataGridCommandColumn>
            </DataGrid>
        </div>


    }
    <div style="padding-top:1em;">
        <Button Clicked="@OnCreateIssueClick" Color="Color.Info">Create Issue</Button>
    </div>
</div>
